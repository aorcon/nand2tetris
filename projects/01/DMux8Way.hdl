// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    // Not(in=sel[0], out=nsel0);
    // Not(in=sel[1], out=nsel1);
    // Not(in=sel[2], out=nsel2);
    // And(a=nsel0, b=nsel1, out=n0);
    // And(a=sel[0], b=nsel1, out=n1);
    // And(a=nsel0, b=sel[1], out=n2);
    // And(a=sel[0], b=sel[1], out=n3);
    // And(a=nsel2, b=n0, out=c0);
    // And(a=nsel2, b=n1, out=c1);
    // And(a=nsel2, b=n2, out=c2);
    // And(a=nsel2, b=n3, out=c3);
    // And(a=sel[2], b=n0, out=c4);
    // And(a=sel[2], b=n1, out=c5);
    // And(a=sel[2], b=n2, out=c6);
    // And(a=sel[2], b=n3, out=c7);
    // And(a=in, b=c0, out=a);
    // And(a=in, b=c1, out=b);
    // And(a=in, b=c2, out=c);
    // And(a=in, b=c3, out=d);
    // And(a=in, b=c4, out=e);
    // And(a=in, b=c5, out=f);
    // And(a=in, b=c6, out=g);
    // And(a=in, b=c7, out=h);

    DMux(in=in, sel=sel[2], a=c1, b=c2);
    DMux4Way(in=c1, sel=sel[0..1], a=a, b=b, c=c, d=d);
    DMux4Way(in=c2, sel=sel[0..1], a=e, b=f, c=g, d=h);
}